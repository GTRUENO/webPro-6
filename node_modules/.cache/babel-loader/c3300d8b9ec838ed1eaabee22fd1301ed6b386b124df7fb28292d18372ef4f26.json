{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adgos\\\\Desktop\\\\webPro-6-main\\\\src\\\\page\\\\P62\\\\components\\\\P62InputFields.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport \"../62P.css\";\nimport P62Question from \"./P62Question\"; // 이미지 관리하는 컴포넌트 가져오기\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst answers = [5, 4, 2, 1, 3]; // 정답 배열\n\nconst P62InputFields = () => {\n  _s();\n  const [connections, setConnections] = useState([]); // 연결 상태\n  const [selectedLeft, setSelectedLeft] = useState(null); // 왼쪽에서 선택된 항목\n  const [selectedRight, setSelectedRight] = useState(null); // 오른쪽에서 선택된 항목\n  const [submitted, setSubmitted] = useState(false);\n  const svgRef = useRef(null);\n  const handleLeftSelect = id => {\n    if (selectedRight !== null) {\n      createConnection(id, selectedRight);\n      setSelectedLeft(null);\n      setSelectedRight(null);\n    } else {\n      setSelectedLeft(id);\n    }\n  };\n  const handleRightSelect = id => {\n    if (selectedLeft !== null) {\n      createConnection(selectedLeft, id);\n      setSelectedLeft(null);\n      setSelectedRight(null);\n    } else {\n      setSelectedRight(id);\n    }\n  };\n  const createConnection = (leftId, rightId) => {\n    setConnections(prev => {\n      // 기존 연결 제거\n      const updatedConnections = prev.filter(conn => conn.left !== leftId && conn.right !== rightId);\n      // 새 연결 추가\n      return [...updatedConnections, {\n        left: leftId,\n        right: rightId\n      }];\n    });\n  };\n  const handleSubmit = () => {\n    setSubmitted(true);\n  };\n  const calculateScore = () => {\n    return connections.reduce((score, conn) => {\n      const index = conn.left - 1; // 왼쪽 번호를 인덱스로 사용\n      return conn.right === answers[index] ? score + 1 : score;\n    }, 0);\n  };\n  const drawConnections = () => {\n    const svg = svgRef.current;\n    if (!svg) return;\n\n    // SVG 초기화\n    svg.innerHTML = \"\";\n    connections.forEach(conn => {\n      const leftElement = document.getElementById(`left-${conn.left}`);\n      const rightElement = document.getElementById(`right-${conn.right}`);\n      if (leftElement && rightElement) {\n        const leftRect = leftElement.getBoundingClientRect();\n        const rightRect = rightElement.getBoundingClientRect();\n        const svgRect = svg.getBoundingClientRect();\n        const x1 = leftRect.right - svgRect.left; // 왼쪽 아이템의 오른쪽 끝\n        const y1 = leftRect.top + leftRect.height / 2 - svgRect.top; // 왼쪽 아이템의 중앙\n        const x2 = rightRect.left - svgRect.left; // 오른쪽 아이템의 왼쪽 끝\n        const y2 = rightRect.top + rightRect.height / 2 - svgRect.top; // 오른쪽 아이템의 중앙\n\n        const line = document.createElementNS(\"http://www.w3.org/2000/svg\", \"line\");\n        line.setAttribute(\"x1\", x1);\n        line.setAttribute(\"y1\", y1);\n        line.setAttribute(\"x2\", x2);\n        line.setAttribute(\"y2\", y2);\n        line.setAttribute(\"stroke\", submitted ? answers[conn.left - 1] === conn.right ? \"blue\" : \"red\" : \"black\");\n        line.setAttribute(\"stroke-width\", \"2\");\n        svg.appendChild(line);\n      }\n    });\n  };\n  useEffect(() => {\n    drawConnections();\n  }, [connections, submitted]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-grid\",\n      children: [/*#__PURE__*/_jsxDEV(P62Question, {\n        onLeftSelect: handleLeftSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n        className: \"svg-connector\",\n        ref: svgRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column right-column\",\n        children: answers.map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-item\",\n          id: `right-${index + 1}`,\n          onClick: () => handleRightSelect(index + 1),\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [5 - index, \"\\uCE35\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this)\n        }, index + 1, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"submit-button\",\n      onClick: handleSubmit,\n      children: \"\\uC81C\\uCD9C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), submitted && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score\",\n      children: `5개 중 ${calculateScore()}개 맞췄습니다!`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n_s(P62InputFields, \"D8lD41s/fza6cmA1nh6wAiaxfXU=\");\n_c = P62InputFields;\nexport default P62InputFields;\nvar _c;\n$RefreshReg$(_c, \"P62InputFields\");","map":{"version":3,"names":["React","useState","useRef","useEffect","P62Question","jsxDEV","_jsxDEV","answers","P62InputFields","_s","connections","setConnections","selectedLeft","setSelectedLeft","selectedRight","setSelectedRight","submitted","setSubmitted","svgRef","handleLeftSelect","id","createConnection","handleRightSelect","leftId","rightId","prev","updatedConnections","filter","conn","left","right","handleSubmit","calculateScore","reduce","score","index","drawConnections","svg","current","innerHTML","forEach","leftElement","document","getElementById","rightElement","leftRect","getBoundingClientRect","rightRect","svgRect","x1","y1","top","height","x2","y2","line","createElementNS","setAttribute","appendChild","className","children","onLeftSelect","fileName","_jsxFileName","lineNumber","columnNumber","ref","map","_","onClick","_c","$RefreshReg$"],"sources":["C:/Users/adgos/Desktop/webPro-6-main/src/page/P62/components/P62InputFields.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport \"../62P.css\";\r\nimport P62Question from \"./P62Question\"; // 이미지 관리하는 컴포넌트 가져오기\r\n\r\nconst answers = [5, 4, 2, 1, 3]; // 정답 배열\r\n\r\nconst P62InputFields = () => {\r\n  const [connections, setConnections] = useState([]); // 연결 상태\r\n  const [selectedLeft, setSelectedLeft] = useState(null); // 왼쪽에서 선택된 항목\r\n  const [selectedRight, setSelectedRight] = useState(null); // 오른쪽에서 선택된 항목\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const svgRef = useRef(null);\r\n\r\n  const handleLeftSelect = (id) => {\r\n    if (selectedRight !== null) {\r\n      createConnection(id, selectedRight);\r\n      setSelectedLeft(null);\r\n      setSelectedRight(null);\r\n    } else {\r\n      setSelectedLeft(id);\r\n    }\r\n  };\r\n\r\n  const handleRightSelect = (id) => {\r\n    if (selectedLeft !== null) {\r\n      createConnection(selectedLeft, id);\r\n      setSelectedLeft(null);\r\n      setSelectedRight(null);\r\n    } else {\r\n      setSelectedRight(id);\r\n    }\r\n  };\r\n\r\n  const createConnection = (leftId, rightId) => {\r\n    setConnections((prev) => {\r\n      // 기존 연결 제거\r\n      const updatedConnections = prev.filter(\r\n        (conn) => conn.left !== leftId && conn.right !== rightId\r\n      );\r\n      // 새 연결 추가\r\n      return [...updatedConnections, { left: leftId, right: rightId }];\r\n    });\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    setSubmitted(true);\r\n  };\r\n\r\n  const calculateScore = () => {\r\n    return connections.reduce((score, conn) => {\r\n      const index = conn.left - 1; // 왼쪽 번호를 인덱스로 사용\r\n      return conn.right === answers[index] ? score + 1 : score;\r\n    }, 0);\r\n  };\r\n\r\n  const drawConnections = () => {\r\n    const svg = svgRef.current;\r\n    if (!svg) return;\r\n\r\n    // SVG 초기화\r\n    svg.innerHTML = \"\";\r\n\r\n    connections.forEach((conn) => {\r\n      const leftElement = document.getElementById(`left-${conn.left}`);\r\n      const rightElement = document.getElementById(`right-${conn.right}`);\r\n\r\n      if (leftElement && rightElement) {\r\n        const leftRect = leftElement.getBoundingClientRect();\r\n        const rightRect = rightElement.getBoundingClientRect();\r\n\r\n        const svgRect = svg.getBoundingClientRect();\r\n\r\n        const x1 = leftRect.right - svgRect.left; // 왼쪽 아이템의 오른쪽 끝\r\n        const y1 = leftRect.top + leftRect.height / 2 - svgRect.top; // 왼쪽 아이템의 중앙\r\n        const x2 = rightRect.left - svgRect.left; // 오른쪽 아이템의 왼쪽 끝\r\n        const y2 = rightRect.top + rightRect.height / 2 - svgRect.top; // 오른쪽 아이템의 중앙\r\n\r\n        const line = document.createElementNS(\"http://www.w3.org/2000/svg\", \"line\");\r\n        line.setAttribute(\"x1\", x1);\r\n        line.setAttribute(\"y1\", y1);\r\n        line.setAttribute(\"x2\", x2);\r\n        line.setAttribute(\"y2\", y2);\r\n        line.setAttribute(\r\n          \"stroke\",\r\n          submitted\r\n            ? answers[conn.left - 1] === conn.right\r\n              ? \"blue\"\r\n              : \"red\"\r\n            : \"black\"\r\n        );\r\n        line.setAttribute(\"stroke-width\", \"2\");\r\n\r\n        svg.appendChild(line);\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    drawConnections();\r\n  }, [connections, submitted]);\r\n\r\n  return (\r\n    <div className=\"question-container\">\r\n      <div className=\"question-grid\">\r\n        {/* 왼쪽 컬럼 */}\r\n        <P62Question onLeftSelect={handleLeftSelect} />\r\n\r\n        {/* SVG 연결 영역 */}\r\n        <svg className=\"svg-connector\" ref={svgRef}></svg>\r\n\r\n        {/* 오른쪽 컬럼 */}\r\n        <div className=\"column right-column\">\r\n          {answers.map((_, index) => (\r\n            <div\r\n              className=\"question-item\"\r\n              key={index + 1}\r\n              id={`right-${index + 1}`}\r\n              onClick={() => handleRightSelect(index + 1)}\r\n            >\r\n              <span>{5 - index}층</span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <button className=\"submit-button\" onClick={handleSubmit}>\r\n        제출\r\n      </button>\r\n\r\n      {submitted && (\r\n        <div className=\"score\">\r\n          {`5개 중 ${calculateScore()}개 맞췄습니다!`}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default P62InputFields;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}