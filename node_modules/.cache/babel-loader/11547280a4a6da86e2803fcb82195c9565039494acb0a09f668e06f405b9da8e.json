{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adgos\\\\Desktop\\\\webPro-6-main\\\\src\\\\page\\\\P62\\\\components\\\\P62InputFields.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport \"../62P.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst answers = [5, 4, 2, 1, 3];\nconst P62InputFields = ({\n  selectedLeft,\n  onConnectionChange\n}) => {\n  _s();\n  const [connections, setConnections] = useState([]);\n  const [selectedRight, setSelectedRight] = useState(null);\n  const svgRef = useRef(null);\n  const handleRightSelect = id => {\n    if (selectedLeft !== null) {\n      // 연결 상태 업데이트\n      const updatedConnections = connections.filter(conn => conn.left !== selectedLeft && conn.right !== id);\n      setConnections([...updatedConnections, {\n        left: selectedLeft,\n        right: id\n      }]);\n      onConnectionChange([...updatedConnections, {\n        left: selectedLeft,\n        right: id\n      }]);\n    } else {\n      setSelectedRight(id);\n    }\n  };\n  const drawConnections = () => {\n    const svg = svgRef.current;\n    if (!svg) return;\n    svg.innerHTML = \"\"; // 기존 연결 초기화\n\n    connections.forEach(conn => {\n      const leftElement = document.getElementById(`left-${conn.left}`);\n      const rightElement = document.getElementById(`right-${conn.right}`);\n      if (leftElement && rightElement) {\n        const leftRect = leftElement.getBoundingClientRect();\n        const rightRect = rightElement.getBoundingClientRect();\n        const svgRect = svg.getBoundingClientRect();\n        const x1 = leftRect.right - svgRect.left;\n        const y1 = leftRect.top + leftRect.height / 2 - svgRect.top;\n        const x2 = rightRect.left - svgRect.left;\n        const y2 = rightRect.top + rightRect.height / 2 - svgRect.top;\n        const line = document.createElementNS(\"http://www.w3.org/2000/svg\", \"line\");\n        line.setAttribute(\"x1\", x1);\n        line.setAttribute(\"y1\", y1);\n        line.setAttribute(\"x2\", x2);\n        line.setAttribute(\"y2\", y2);\n        line.setAttribute(\"stroke\", answers[conn.left - 1] === conn.right ? \"blue\" : \"red\");\n        line.setAttribute(\"stroke-width\", \"2\");\n        svg.appendChild(line);\n      }\n    });\n  };\n  useEffect(() => {\n    drawConnections();\n  }, [connections]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"right-column\",\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      className: \"svg-connector\",\n      ref: svgRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), answers.map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-item\",\n      id: `right-${index + 1}`,\n      onClick: () => handleRightSelect(index + 1),\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [5 - index, \"\\uCE35\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)\n    }, index + 1, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(P62InputFields, \"A3n2Vfw56Cyn2JPMT9VDgabO27s=\");\n_c = P62InputFields;\nexport default P62InputFields;\nvar _c;\n$RefreshReg$(_c, \"P62InputFields\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","answers","P62InputFields","selectedLeft","onConnectionChange","_s","connections","setConnections","selectedRight","setSelectedRight","svgRef","handleRightSelect","id","updatedConnections","filter","conn","left","right","drawConnections","svg","current","innerHTML","forEach","leftElement","document","getElementById","rightElement","leftRect","getBoundingClientRect","rightRect","svgRect","x1","y1","top","height","x2","y2","line","createElementNS","setAttribute","appendChild","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","map","_","index","onClick","_c","$RefreshReg$"],"sources":["C:/Users/adgos/Desktop/webPro-6-main/src/page/P62/components/P62InputFields.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport \"../62P.css\";\r\n\r\nconst answers = [5, 4, 2, 1, 3];\r\n\r\nconst P62InputFields = ({ selectedLeft, onConnectionChange }) => {\r\n  const [connections, setConnections] = useState([]);\r\n  const [selectedRight, setSelectedRight] = useState(null);\r\n  const svgRef = useRef(null);\r\n\r\n  const handleRightSelect = (id) => {\r\n    if (selectedLeft !== null) {\r\n      // 연결 상태 업데이트\r\n      const updatedConnections = connections.filter(\r\n        (conn) => conn.left !== selectedLeft && conn.right !== id\r\n      );\r\n      setConnections([...updatedConnections, { left: selectedLeft, right: id }]);\r\n      onConnectionChange([...updatedConnections, { left: selectedLeft, right: id }]);\r\n    } else {\r\n      setSelectedRight(id);\r\n    }\r\n  };\r\n\r\n  const drawConnections = () => {\r\n    const svg = svgRef.current;\r\n    if (!svg) return;\r\n\r\n    svg.innerHTML = \"\"; // 기존 연결 초기화\r\n\r\n    connections.forEach((conn) => {\r\n      const leftElement = document.getElementById(`left-${conn.left}`);\r\n      const rightElement = document.getElementById(`right-${conn.right}`);\r\n\r\n      if (leftElement && rightElement) {\r\n        const leftRect = leftElement.getBoundingClientRect();\r\n        const rightRect = rightElement.getBoundingClientRect();\r\n        const svgRect = svg.getBoundingClientRect();\r\n\r\n        const x1 = leftRect.right - svgRect.left;\r\n        const y1 = leftRect.top + leftRect.height / 2 - svgRect.top;\r\n        const x2 = rightRect.left - svgRect.left;\r\n        const y2 = rightRect.top + rightRect.height / 2 - svgRect.top;\r\n\r\n        const line = document.createElementNS(\"http://www.w3.org/2000/svg\", \"line\");\r\n        line.setAttribute(\"x1\", x1);\r\n        line.setAttribute(\"y1\", y1);\r\n        line.setAttribute(\"x2\", x2);\r\n        line.setAttribute(\"y2\", y2);\r\n        line.setAttribute(\"stroke\", answers[conn.left - 1] === conn.right ? \"blue\" : \"red\");\r\n        line.setAttribute(\"stroke-width\", \"2\");\r\n        svg.appendChild(line);\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    drawConnections();\r\n  }, [connections]);\r\n\r\n  return (\r\n    <div className=\"right-column\">\r\n      <svg className=\"svg-connector\" ref={svgRef}></svg>\r\n      {answers.map((_, index) => (\r\n        <div\r\n          className=\"question-item\"\r\n          key={index + 1}\r\n          id={`right-${index + 1}`}\r\n          onClick={() => handleRightSelect(index + 1)}\r\n        >\r\n          <span>{5 - index}층</span>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default P62InputFields;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}