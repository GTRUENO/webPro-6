{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adgos\\\\Desktop\\\\webPro-6-main\\\\src\\\\page\\\\P62\\\\components\\\\P62Question.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\"; // React Router 가져오기\nimport \"../62P.css\";\nimport Question1 from \"../img/Question1.jpg\";\nimport Question2 from \"../img/Question2.jpg\";\nimport Question3 from \"../img/Question3.jpg\";\nimport Question4 from \"../img/Question4.jpg\";\nimport Question5 from \"../img/Question5.jpg\";\n\n// 이미지 배열 구성\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst questions = [{\n  id: 1,\n  image: Question1,\n  style: {\n    maxWidth: \"300px\",\n    maxHeight: \"200px\"\n  }\n}, {\n  id: 2,\n  image: Question2,\n  style: {\n    maxWidth: \"300px\",\n    maxHeight: \"200px\"\n  }\n}, {\n  id: 3,\n  image: Question3,\n  style: {\n    maxWidth: \"300px\",\n    maxHeight: \"200px\"\n  }\n}, {\n  id: 4,\n  image: Question4,\n  style: {\n    maxWidth: \"300px\",\n    maxHeight: \"200px\"\n  }\n}, {\n  id: 5,\n  image: Question5,\n  style: {\n    maxWidth: \"300px\",\n    maxHeight: \"200px\"\n  }\n}];\nconst answers = [5, 4, 2, 1, 3]; // 정답 배열\n\nconst Question = () => {\n  _s();\n  const [connections, setConnections] = useState([]); // 연결 상태\n  const [selectedLeft, setSelectedLeft] = useState(null); // 왼쪽에서 선택된 항목\n  const [selectedRight, setSelectedRight] = useState(null); // 오른쪽에서 선택된 항목\n  const [submitted, setSubmitted] = useState(false);\n  const svgRef = useRef(null);\n  const navigate = useNavigate(); // navigate 함수 선언\n\n  const handleLeftSelect = id => {\n    if (selectedRight !== null) {\n      createConnection(id, selectedRight);\n      setSelectedLeft(null);\n      setSelectedRight(null);\n    } else {\n      setSelectedLeft(id);\n    }\n  };\n  const handleRightSelect = id => {\n    if (selectedLeft !== null) {\n      createConnection(selectedLeft, id);\n      setSelectedLeft(null);\n      setSelectedRight(null);\n    } else {\n      setSelectedRight(id);\n    }\n  };\n  const createConnection = (leftId, rightId) => {\n    setConnections(prev => {\n      const updatedConnections = prev.filter(conn => conn.left !== leftId && conn.right !== rightId);\n      return [...updatedConnections, {\n        left: leftId,\n        right: rightId\n      }];\n    });\n  };\n  const handleSubmit = () => {\n    setSubmitted(true);\n  };\n  const handleNext = () => {\n    navigate(\"/다음페이지\"); // 다음 페이지로 이동\n  };\n  const calculateScore = () => {\n    return connections.reduce((score, conn) => {\n      const index = conn.left - 1;\n      return conn.right === answers[index] ? score + 1 : score;\n    }, 0);\n  };\n  const drawConnections = () => {\n    const svg = svgRef.current;\n    if (!svg) return;\n    svg.innerHTML = \"\";\n    connections.forEach(conn => {\n      const leftElement = document.getElementById(`left-${conn.left}`);\n      const rightElement = document.getElementById(`right-${conn.right}`);\n      if (leftElement && rightElement) {\n        const leftRect = leftElement.getBoundingClientRect();\n        const rightRect = rightElement.getBoundingClientRect();\n        const svgRect = svg.getBoundingClientRect();\n        const x1 = leftRect.right - svgRect.left;\n        const y1 = leftRect.top + leftRect.height / 2 - svgRect.top;\n        const x2 = rightRect.left - svgRect.left;\n        const y2 = rightRect.top + rightRect.height / 2 - svgRect.top;\n        const line = document.createElementNS(\"http://www.w3.org/2000/svg\", \"line\");\n        line.setAttribute(\"x1\", x1);\n        line.setAttribute(\"y1\", y1);\n        line.setAttribute(\"x2\", x2);\n        line.setAttribute(\"y2\", y2);\n        line.setAttribute(\"stroke\", submitted ? answers[conn.left - 1] === conn.right ? \"blue\" : \"red\" : \"black\");\n        line.setAttribute(\"stroke-width\", \"2\");\n        svg.appendChild(line);\n      }\n    });\n  };\n  useEffect(() => {\n    drawConnections();\n  }, [connections, submitted]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column left-column\",\n        children: questions.map(q => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-item\",\n          id: `left-${q.id}`,\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: q.image,\n            alt: `Question ${q.id}`,\n            style: q.style\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"dot-checkbox\",\n            onClick: () => handleLeftSelect(q.id),\n            checked: selectedLeft === q.id || connections.some(conn => conn.left === q.id),\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this)]\n        }, q.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n        className: \"svg-connector\",\n        ref: svgRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column right-column\",\n        children: answers.map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-item\",\n          id: `right-${index + 1}`,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            className: \"dot-right-checkbox\",\n            onClick: () => handleRightSelect(index + 1),\n            checked: selectedRight === index + 1 || connections.some(conn => conn.right === index + 1),\n            readOnly: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [5 - index, \"\\uCE35\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this)]\n        }, index + 1, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), submitted ? /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"submit-button\",\n      onClick: handleNext,\n      children: \"\\uB2E4\\uC74C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"submit-button\",\n      onClick: handleSubmit,\n      children: \"\\uC81C\\uCD9C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }, this), submitted && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score\",\n      children: `5개 중 ${calculateScore()}개 맞췄습니다!`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n};\n_s(Question, \"xsv7unwwlVTuIWXTdJ183hxEsRo=\", false, function () {\n  return [useNavigate];\n});\n_c = Question;\nexport default Question;\nvar _c;\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useNavigate","Question1","Question2","Question3","Question4","Question5","jsxDEV","_jsxDEV","questions","id","image","style","maxWidth","maxHeight","answers","Question","_s","connections","setConnections","selectedLeft","setSelectedLeft","selectedRight","setSelectedRight","submitted","setSubmitted","svgRef","navigate","handleLeftSelect","createConnection","handleRightSelect","leftId","rightId","prev","updatedConnections","filter","conn","left","right","handleSubmit","handleNext","calculateScore","reduce","score","index","drawConnections","svg","current","innerHTML","forEach","leftElement","document","getElementById","rightElement","leftRect","getBoundingClientRect","rightRect","svgRect","x1","y1","top","height","x2","y2","line","createElementNS","setAttribute","appendChild","className","children","map","q","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","checked","some","readOnly","ref","_","_c","$RefreshReg$"],"sources":["C:/Users/adgos/Desktop/webPro-6-main/src/page/P62/components/P62Question.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\"; // React Router 가져오기\nimport \"../62P.css\";\n\nimport Question1 from \"../img/Question1.jpg\";\nimport Question2 from \"../img/Question2.jpg\";\nimport Question3 from \"../img/Question3.jpg\";\nimport Question4 from \"../img/Question4.jpg\";\nimport Question5 from \"../img/Question5.jpg\";\n\n// 이미지 배열 구성\nconst questions = [\n  { id: 1, image: Question1, style: { maxWidth: \"300px\", maxHeight: \"200px\" } },\n  { id: 2, image: Question2, style: { maxWidth: \"300px\", maxHeight: \"200px\" } },\n  { id: 3, image: Question3, style: { maxWidth: \"300px\", maxHeight: \"200px\" } },\n  { id: 4, image: Question4, style: { maxWidth: \"300px\", maxHeight: \"200px\" } },\n  { id: 5, image: Question5, style: { maxWidth: \"300px\", maxHeight: \"200px\" } },\n];\n\nconst answers = [5, 4, 2, 1, 3]; // 정답 배열\n\nconst Question = () => {\n  const [connections, setConnections] = useState([]); // 연결 상태\n  const [selectedLeft, setSelectedLeft] = useState(null); // 왼쪽에서 선택된 항목\n  const [selectedRight, setSelectedRight] = useState(null); // 오른쪽에서 선택된 항목\n  const [submitted, setSubmitted] = useState(false);\n  const svgRef = useRef(null);\n  const navigate = useNavigate(); // navigate 함수 선언\n\n  const handleLeftSelect = (id) => {\n    if (selectedRight !== null) {\n      createConnection(id, selectedRight);\n      setSelectedLeft(null);\n      setSelectedRight(null);\n    } else {\n      setSelectedLeft(id);\n    }\n  };\n\n  const handleRightSelect = (id) => {\n    if (selectedLeft !== null) {\n      createConnection(selectedLeft, id);\n      setSelectedLeft(null);\n      setSelectedRight(null);\n    } else {\n      setSelectedRight(id);\n    }\n  };\n\n  const createConnection = (leftId, rightId) => {\n    setConnections((prev) => {\n      const updatedConnections = prev.filter(\n        (conn) => conn.left !== leftId && conn.right !== rightId\n      );\n      return [...updatedConnections, { left: leftId, right: rightId }];\n    });\n  };\n\n  const handleSubmit = () => {\n    setSubmitted(true);\n  };\n\n  const handleNext = () => {\n    navigate(\"/다음페이지\"); // 다음 페이지로 이동\n  };\n\n  const calculateScore = () => {\n    return connections.reduce((score, conn) => {\n      const index = conn.left - 1;\n      return conn.right === answers[index] ? score + 1 : score;\n    }, 0);\n  };\n\n  const drawConnections = () => {\n    const svg = svgRef.current;\n    if (!svg) return;\n\n    svg.innerHTML = \"\";\n\n    connections.forEach((conn) => {\n      const leftElement = document.getElementById(`left-${conn.left}`);\n      const rightElement = document.getElementById(`right-${conn.right}`);\n\n      if (leftElement && rightElement) {\n        const leftRect = leftElement.getBoundingClientRect();\n        const rightRect = rightElement.getBoundingClientRect();\n\n        const svgRect = svg.getBoundingClientRect();\n\n        const x1 = leftRect.right - svgRect.left;\n        const y1 = leftRect.top + leftRect.height / 2 - svgRect.top;\n        const x2 = rightRect.left - svgRect.left;\n        const y2 = rightRect.top + rightRect.height / 2 - svgRect.top;\n\n        const line = document.createElementNS(\"http://www.w3.org/2000/svg\", \"line\");\n        line.setAttribute(\"x1\", x1);\n        line.setAttribute(\"y1\", y1);\n        line.setAttribute(\"x2\", x2);\n        line.setAttribute(\"y2\", y2);\n        line.setAttribute(\n          \"stroke\",\n          submitted\n            ? answers[conn.left - 1] === conn.right\n              ? \"blue\"\n              : \"red\"\n            : \"black\"\n        );\n        line.setAttribute(\"stroke-width\", \"2\");\n\n        svg.appendChild(line);\n      }\n    });\n  };\n\n  useEffect(() => {\n    drawConnections();\n  }, [connections, submitted]);\n\n  return (\n    <div className=\"question-container\">\n      <div className=\"question-grid\">\n        <div className=\"column left-column\">\n          {questions.map((q) => (\n            <div className=\"question-item\" key={q.id} id={`left-${q.id}`}>\n              <img src={q.image} alt={`Question ${q.id}`} style={q.style} />\n              <input\n                type=\"checkbox\"\n                className=\"dot-checkbox\"\n                onClick={() => handleLeftSelect(q.id)}\n                checked={\n                  selectedLeft === q.id ||\n                  connections.some((conn) => conn.left === q.id)\n                }\n                readOnly\n              />\n            </div>\n          ))}\n        </div>\n\n        <svg className=\"svg-connector\" ref={svgRef}></svg>\n\n        <div className=\"column right-column\">\n          {answers.map((_, index) => (\n            <div className=\"question-item\" key={index + 1} id={`right-${index + 1}`}>\n              <input\n                type=\"checkbox\"\n                className=\"dot-right-checkbox\"\n                onClick={() => handleRightSelect(index + 1)}\n                checked={\n                  selectedRight === index + 1 ||\n                  connections.some((conn) => conn.right === index + 1)\n                }\n                readOnly\n              />\n              <span>{5 - index}층</span>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {submitted ? (\n        <button className=\"submit-button\" onClick={handleNext}>\n          다음\n        </button>\n      ) : (\n        <button className=\"submit-button\" onClick={handleSubmit}>\n          제출\n        </button>\n      )}\n\n      {submitted && (\n        <div className=\"score\">\n          {`5개 중 ${calculateScore()}개 맞췄습니다!`}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Question;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}